{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gift","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAkB7C,OACI,sBAAMC,SAVW,SAACC,GAElBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GAEvBF,EAAeE,EAAEQ,OAAOF,a,+BCRnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAON,IACxB,kCAAMA,EAAN,WCHCO,EAAU,SAAC,GAAiB,IAAfnB,EAAc,EAAdA,SAAc,ECDZ,SAAEA,GAAe,IAAD,EAGdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAL2B,mBAGjCC,EAHiC,KAG1BC,EAH0B,KAoBxC,OAZAC,qBAAW,WAEPxB,EAASC,GACAwB,MAAM,SAAAC,GAAI,OAEPH,EAAU,CACVf,KAAMkB,EACNL,SAAS,SAGtB,CAAEpB,IAEEqB,EDhB0BK,CAAc1B,GAAjCa,EAHsB,EAG5BN,KAAca,EAHc,EAGdA,QAEtB,OACI,qCACI,qBAAIJ,UAAU,qCAAd,cAAqDhB,EAArD,OACEoB,GAAW,mBAAGJ,UAAU,mCAAb,yBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEdzBgB,EAAS,WAAO,IAAD,EAEYzC,mBAAS,CAAC,gBAFtB,mBAEjB0C,EAFiB,KAEL3C,EAFK,KAIxB,OACI,qCACI,wCACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAWA,GADNA,Y,MCX7B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2593a3ff.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CategoryAdd = ( {setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n    \r\n        setInputValue( e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit= {handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nCategoryAdd.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n","\r\nexport const getGifs = async ( category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=7hMW2YMQ1Awd1EmtbCBoJ1OP65rJJ3fu`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gift = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gift;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt= { title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category}) => {\r\n\r\n\r\n    const { data: images, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fade_in\"> {category} </h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                            key={ img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n                .then( imgs => \r\n                    \r\n                    setstate( {\r\n                    data: imgs,\r\n                    loading: false\r\n                } ));\r\n\r\n    }, [ category ])\r\n\r\n    return state; // el obj ( data y loading)\r\n\r\n}","import React, { useState } from 'react';\r\nimport { CategoryAdd } from './components/CategoryAdd';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball'])\r\n\r\n    return(\r\n        <>\r\n            <h2>GifApp</h2>\r\n            <CategoryAdd setCategories={ setCategories } />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                        key={category}\r\n                        category={ category } />\r\n                    )\r\n                }            \r\n            </ol>\r\n        </>\r\n\r\n\r\n        )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifApp} from './GifApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}